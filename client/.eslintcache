[{"C:\\Instagram\\client\\src\\index.js":"1","C:\\Instagram\\client\\src\\App.js":"2","C:\\Instagram\\client\\src\\reportWebVitals.js":"3","C:\\Instagram\\client\\src\\components\\navBar.jsx":"4","C:\\Instagram\\client\\src\\components\\loginForm.jsx":"5","C:\\Instagram\\client\\src\\components\\registerForm.jsx":"6","C:\\Instagram\\client\\src\\components\\createPost.jsx":"7","C:\\Instagram\\client\\src\\services\\userService.js":"8","C:\\Instagram\\client\\src\\services\\authService.js":"9","C:\\Instagram\\client\\src\\services\\httpService.js":"10","C:\\Instagram\\client\\src\\services\\postService.js":"11","C:\\Instagram\\client\\src\\components\\logout.jsx":"12","C:\\Instagram\\client\\src\\components\\myProfile.jsx":"13","C:\\Instagram\\client\\src\\components\\userProfile.jsx":"14","C:\\Instagram\\client\\src\\reducers\\userReducer.js":"15","C:\\Instagram\\client\\src\\components\\loading.jsx":"16","C:\\Instagram\\client\\src\\components\\explore.jsx":"17","C:\\Instagram\\client\\src\\components\\home.jsx":"18","C:\\Instagram\\client\\src\\components\\resetPassword.jsx":"19","C:\\Instagram\\client\\src\\components\\updatePassword.jsx":"20"},{"size":593,"mtime":1607180904409,"results":"21","hashOfConfig":"22"},{"size":2410,"mtime":1607858216510,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":4346,"mtime":1607887226020,"results":"25","hashOfConfig":"22"},{"size":2796,"mtime":1607863687509,"results":"26","hashOfConfig":"22"},{"size":2864,"mtime":1607324164792,"results":"27","hashOfConfig":"22"},{"size":3082,"mtime":1607326728238,"results":"28","hashOfConfig":"22"},{"size":226,"mtime":1607184932244,"results":"29","hashOfConfig":"22"},{"size":974,"mtime":1607454378898,"results":"30","hashOfConfig":"22"},{"size":676,"mtime":1607509174712,"results":"31","hashOfConfig":"22"},{"size":864,"mtime":1607266167784,"results":"32","hashOfConfig":"22"},{"size":556,"mtime":1607695901898,"results":"33","hashOfConfig":"22"},{"size":4174,"mtime":1607777669945,"results":"34","hashOfConfig":"22"},{"size":4704,"mtime":1607754094620,"results":"35","hashOfConfig":"22"},{"size":500,"mtime":1607769861038,"results":"36","hashOfConfig":"22"},{"size":599,"mtime":1607716772645,"results":"37","hashOfConfig":"22"},{"size":4748,"mtime":1607749220334,"results":"38","hashOfConfig":"22"},{"size":4754,"mtime":1607749545040,"results":"39","hashOfConfig":"22"},{"size":1925,"mtime":1607857251128,"results":"40","hashOfConfig":"22"},{"size":1813,"mtime":1607862632565,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"b1ajgf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},"C:\\Instagram\\client\\src\\index.js",[],["95","96"],"C:\\Instagram\\client\\src\\App.js",["97","98","99"],"import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navBar\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Explore from \"./components/explore\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Profile from \"./components/myProfile\";\nimport CreatePost from \"./components/createPost\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { initialState, reducer } from \"./reducers/userReducer\";\nimport auth from \"./services/authService\";\nimport Logout from \"./components/logout\";\nimport UserProfile from \"./components/userProfile\";\nimport Home from \"./components/home\";\nimport ResetPassword from \"./components/resetPassword\";\nimport UpdatePassword from \"./components/updatePassword\";\n\nexport const UserContext = createContext();\n\nconst Routes = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  //excutes only once when application loads\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      // history.push(\"/\");\n    } else if (\n      !history.location.pathname.startsWith(\"/reset\") &&\n      !history.location.pathname.startsWith(\"/signup\")\n    ) {\n      history.push(\"/login\");\n    }\n  }, []);\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/user/:userId\" component={UserProfile} />\n        <Route path=\"/reset/:token\" component={UpdatePassword} />\n        <Route path=\"/reset\" component={ResetPassword} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/signup\" component={RegisterForm} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/createpost\" component={CreatePost} />\n        <Route path=\"/explore\" component={Explore} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </div>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <React.Fragment>\n      <UserContext.Provider value={{ state, dispatch }}>\n        <ToastContainer />\n        <NavBar></NavBar>\n        <Routes />\n      </UserContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Instagram\\client\\src\\reportWebVitals.js",[],"C:\\Instagram\\client\\src\\components\\navBar.jsx",["100"],"C:\\Instagram\\client\\src\\components\\loginForm.jsx",["101"],"import React, { useState, useContext } from \"react\";\r\nimport logo from \"../instagram-font-png-1.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"../App\";\r\n\r\nexport default function LoginForm() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n  };\r\n\r\n  const validate = () => {\r\n    const data = { email, password };\r\n    const { error } = Joi.validate(data, schema);\r\n    if (error) toast.error(error.details[0].message);\r\n    // const errors = {};\r\n    // for (let item of error.details) {\r\n    //   // errors[item.path[0]] = item.message;\r\n    //   toast.error(item.message);\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); //prevents application reloading\r\n    if (validate()) return;\r\n    try {\r\n      await auth.login(email, password);\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(user);\r\n      dispatch({ type: \"USER\", payload: user });\r\n      toast(\"Successfully Signedin\");\r\n      history.push(\"/\");\r\n      //window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        // const errors = { ...this.state.errors };\r\n        // errors.username = ex.response.data;\r\n        // this.setState({ errors });\r\n        toast.error(ex.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"card docenter\" onSubmit={handleSubmit}>\r\n        <div className=\"input-field\">\r\n          <img alt=\"instagram logo\" src={logo} width=\"100\" height=\"50\" />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"waves-effect waves-light btn btn-block #42a5f5 blue lighten-1\">\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\" card docenter\">\r\n        <Link className=\"link\" to=\"/reset\">\r\n          Forgot password ?\r\n        </Link>\r\n\r\n        <p>\r\n          Don't have an account?\r\n          <Link className=\"link\" to=\"/signup\">\r\n            Sign up\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\components\\registerForm.jsx",[],"C:\\Instagram\\client\\src\\components\\createPost.jsx",["102"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function CreatePost() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          img: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            toast.error(data.error);\r\n            //    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n          } else {\r\n            //     M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n            toast(\"Successfully Posted\");\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  const savePost = (data) => {\r\n    return fetch(\"https://api.cloudinary.com/v1_1/cloud098/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const data = new FormData();\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"file\", image);\r\n\r\n    data.append(\"cloud_name\", \"cloud098\");\r\n    console.log(data);\r\n    //const url=\"https://api.cloudinary.com/v1_1/cloud098/image/upload\";\r\n    try {\r\n      await savePost(data);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(ex.response.data);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card home insidecard\">\r\n      <div className=\"input-field\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-field \">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"body\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn  #42a5f5 blue lighten-1\">\r\n          <span>File</span>\r\n\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={handleSubmit}\r\n        className=\"waves-effect waves-light btn btn-block #42a5f5 blue lighten-1\"\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\services\\userService.js",[],"C:\\Instagram\\client\\src\\services\\authService.js",[],"C:\\Instagram\\client\\src\\services\\httpService.js",[],"C:\\Instagram\\client\\src\\services\\postService.js",["103"],"import http from \"./httpService\";\r\n\r\nconst url = \"https://api.cloudinary.com/v1_1/cloud098/image/upload\";\r\n\r\n// const headers = {\r\n//   \"content-type\": \"multipart/form-data\",\r\n//   \"Access-Control-Allow-Headers\": \"*\",\r\n//   \"x-auth-token\": \"*\",\r\n// };\r\n// const headers = {\r\n//   \"Content-Type\": \"application/json\",\r\n//   \"x-auth-token\": \"\",\r\n// };\r\n// let axiosConfig = {\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json;charset=UTF-8\",\r\n//     \"Access-Control-Allow-Origin\": \"*\",\r\n//   },\r\n// };\r\n// export function savePost(post) {\r\n//   return http.post(url, {\r\n//     body: post,\r\n//   });\r\n// }\r\n\r\nexport function savePost(data) {\r\n  return fetch(url, {\r\n    method: \"post\",\r\n    body: data,\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n",["104","105"],"C:\\Instagram\\client\\src\\components\\logout.jsx",["106"],"import React, { useEffect, useContext } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\n\r\nexport default function Logout() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (state) {\r\n      auth.logout();\r\n      dispatch({ type: \"DELETE\" });\r\n      toast(\"Successfully Logged Out\");\r\n    }\r\n    history.push(\"/login\");\r\n  });\r\n  return null;\r\n}\r\n","C:\\Instagram\\client\\src\\components\\myProfile.jsx",["107"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"./../App\";\r\n\r\nexport default function Profile() {\r\n  const [post, setPost] = useState([]);\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  console.log(state);\r\n  useEffect(() => {\r\n    async function getMyPost() {\r\n      const { data } = await http.get(\"/mypost\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setPost(data);\r\n    }\r\n    getMyPost();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateProfilePic = async () => {\r\n      if (profileImage) {\r\n        const data = new FormData();\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"file\", profileImage);\r\n\r\n        data.append(\"cloud_name\", \"cloud098\");\r\n        console.log(data);\r\n        //const url=\"https://api.cloudinary.com/v1_1/cloud098/image/upload\";\r\n        try {\r\n          await saveProfileImage(data);\r\n        } catch (ex) {\r\n          if (ex.response && ex.response.status === 400) {\r\n            toast.error(ex.response.data);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    updateProfilePic();\r\n  }, [profileImage]);\r\n  const saveProfileImage = (data) => {\r\n    return fetch(\"https://api.cloudinary.com/v1_1/cloud098/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        fetch(\"/updateProfilePic\", {\r\n          method: \"put\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            profilePic: data.url,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            console.log(result);\r\n            localStorage.setItem(\r\n              \"user\",\r\n              JSON.stringify({ ...state, profilePic: result.profilePic })\r\n            );\r\n            dispatch({ type: \"UPDATEPROFILEPIC\", payload: result.profilePic });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          margin: \"20px 0px\",\r\n          justifyContent: \"space-around\",\r\n          borderBottom: \"1px solid grey\",\r\n        }}\r\n      >\r\n        <div>\r\n          <img\r\n            src={state && state.profilePic}\r\n            alt=\"profile img\"\r\n            style={{\r\n              width: \"150px\",\r\n              height: \"150px\",\r\n              borderRadius: \"75px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          />\r\n          <div className=\"file-field input-field\">\r\n            <div className=\"btn  #42a5f5 blue lighten-1\">\r\n              <span>Update Pic</span>\r\n\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => setProfileImage(e.target.files[0])}\r\n              />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n              <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h4>{user.name}</h4>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              margin: \"20px 0px\",\r\n              justifyContent: \"space-between\",\r\n              width: \"130%\",\r\n            }}\r\n          >\r\n            <h6>{post.length} posts</h6>\r\n\r\n            <h6>{state ? state.followers.length : 0} followers</h6>\r\n            <h6>{state ? state.following.length : 0} following</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mypost\">\r\n        {post.map((item) => {\r\n          return (\r\n            <img\r\n              src={item.photo}\r\n              alt={item.title}\r\n              key={item._id}\r\n              className=\"mypic\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\components\\userProfile.jsx",["108","109"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport http from \"../services/httpService\";\r\nimport { UserContext } from \"./../App\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loading from \"./loading\";\r\n\r\nexport default function UserProfile() {\r\n  const { userId } = useParams();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [profile, setProfile] = useState(null);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  //console.log(state);\r\n  useEffect(() => {\r\n    async function getProfile() {\r\n      try {\r\n        const { data } = await http.get(`/user/${userId}`, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n        });\r\n        //console.log(data);\r\n        setProfile(data);\r\n      } catch (ex) {\r\n        if (ex.response && ex.response.status === 404) {\r\n          toast.error(ex.response.data);\r\n          console.log(ex);\r\n        }\r\n      }\r\n    }\r\n    getProfile();\r\n  }, []);\r\n\r\n  const followUser = async () => {\r\n    const { data } = await http.put(\r\n      \"/follow\",\r\n      { otherUserId: userId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    console.log(data);\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      payload: { following: data.following, followers: data.followers },\r\n    });\r\n    localStorage.setItem(\"user\", JSON.stringify(data));\r\n    setProfile((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        user: {\r\n          ...prevState.user,\r\n          followers: [...prevState.user.followers, data._id],\r\n        },\r\n      };\r\n    });\r\n  };\r\n  const unfollowUser = async () => {\r\n    const { data } = await http.put(\r\n      \"/unfollow\",\r\n      { otherUserId: userId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    console.log(data);\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      payload: { following: data.following, followers: data.followers },\r\n    });\r\n    localStorage.setItem(\"user\", JSON.stringify(data));\r\n    setProfile((prevState) => {\r\n      const followers = prevState.user.followers.filter(\r\n        (id) => id !== data._id\r\n      );\r\n      return {\r\n        ...prevState,\r\n        user: {\r\n          ...prevState.user,\r\n          followers,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {profile ? (\r\n        <div className=\"container\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              margin: \"20px 0px\",\r\n              justifyContent: \"space-around\",\r\n              borderBottom: \"1px solid grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                src={profile.user.profilePic}\r\n                alt=\"profile img\"\r\n                style={{\r\n                  width: \"150px\",\r\n                  height: \"150px\",\r\n                  borderRadius: \"75px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>\r\n                {profile.user.name}&nbsp;&nbsp;\r\n                {state && state.following.includes(userId) ? (\r\n                  <button\r\n                    onClick={unfollowUser}\r\n                    className=\"waves-effect waves-light btn-small #42a5f5 blue lighten-1\"\r\n                  >\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={followUser}\r\n                    className=\"waves-effect waves-light btn-small #42a5f5 blue lighten-1\"\r\n                  >\r\n                    follow\r\n                  </button>\r\n                )}\r\n              </h4>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  margin: \"20px 0px\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"130%\",\r\n                }}\r\n              >\r\n                <h6>{profile.posts.length} posts</h6>\r\n                <h6>{profile.user.followers.length} followers</h6>\r\n                <h6>{profile.user.following.length} following</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mypost\">\r\n            {profile.posts.map((item) => {\r\n              return (\r\n                <img\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                  key={item._id}\r\n                  className=\"mypic\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loading></Loading>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\reducers\\userReducer.js",[],"C:\\Instagram\\client\\src\\components\\loading.jsx",[],"C:\\Instagram\\client\\src\\components\\explore.jsx",["110"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport { UserContext } from \"../App\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Explore() {\r\n  const [post, setPost] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    async function getAllPost() {\r\n      const { data } = await http.get(\"/allpost\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n\r\n      setPost(data);\r\n    }\r\n    getAllPost();\r\n  }, []);\r\n\r\n  const likePost = async (postId) => {\r\n    const { data } = await http.put(\r\n      \"/like\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n  const unlikePost = async (postId) => {\r\n    const { data } = await http.put(\r\n      \"/unlike\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n\r\n  const postComment = async (text, postId) => {\r\n    const { data } = await http.put(\r\n      \"/comment\",\r\n      { text, postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n  const deletePost = async (postId) => {\r\n    const originalPost = post;\r\n    const newPost = originalPost.filter((item) => {\r\n      return item._id !== postId;\r\n    });\r\n    setPost(newPost);\r\n    try {\r\n      await http.delete(`/deletepost/${postId}`, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      console.log(\"abc\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Invalid Request\");\r\n      }\r\n      setPost(originalPost);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      {post.map((item) => {\r\n        return (\r\n          <div className=\"card\" key={item._id}>\r\n            <h5>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? `/user/${item.postedBy._id}`\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>\r\n              {item.postedBy._id === state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    float: \"right\",\r\n                  }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} alt={item.title} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{ color: \"red\" }}\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  favorite_border\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((comment) => {\r\n                return (\r\n                  <p key={comment._id}>\r\n                    <b>{comment.postedBy.name}&nbsp;</b>\r\n                    {comment.text}\r\n                  </p>\r\n                );\r\n              })}\r\n            </div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                postComment(e.target[0].value, item._id);\r\n              }}\r\n            >\r\n              <div className=\"card-action\">\r\n                <input type=\"text\" placeholder=\"Add a comment\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\components\\home.jsx",["111"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport { UserContext } from \"../App\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  const [post, setPost] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    async function getAllPost() {\r\n      const { data } = await http.get(\"/allpost\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n\r\n      setPost(data);\r\n    }\r\n    getAllPost();\r\n  }, []);\r\n\r\n  const likePost = async (postId) => {\r\n    const { data } = await http.put(\r\n      \"/like\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n  const unlikePost = async (postId) => {\r\n    const { data } = await http.put(\r\n      \"/unlike\",\r\n      { postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n\r\n  const postComment = async (text, postId) => {\r\n    const { data } = await http.put(\r\n      \"/comment\",\r\n      { text, postId },\r\n      {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    );\r\n    const newPost = post.map((item) => {\r\n      if (item._id === data._id) return data;\r\n      else return item;\r\n    });\r\n    setPost(newPost);\r\n  };\r\n  const deletePost = async (postId) => {\r\n    const originalPost = post;\r\n    const newPost = originalPost.filter((item) => {\r\n      return item._id !== postId;\r\n    });\r\n    setPost(newPost);\r\n    try {\r\n      await http.delete(`/deletepost/${postId}`, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      console.log(\"abc\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(\"Invalid Request\");\r\n      }\r\n      setPost(originalPost);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      {post.map((item) => {\r\n        return (\r\n          <div className=\"card\" key={item._id}>\r\n            <h5>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? `/user/${item.postedBy._id}`\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>\r\n              {item.postedBy._id === state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    float: \"right\",\r\n                  }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} alt={item.title} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{ color: \"red\" }}\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  favorite_border\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((comment) => {\r\n                return (\r\n                  <p key={comment._id}>\r\n                    <b>{comment.postedBy.name}&nbsp;</b>\r\n                    {comment.text}\r\n                  </p>\r\n                );\r\n              })}\r\n            </div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                postComment(e.target[0].value, item._id);\r\n              }}\r\n            >\r\n              <div className=\"card-action\">\r\n                <input type=\"text\" placeholder=\"Add a comment\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\components\\resetPassword.jsx",["112","113","114","115"],"import React, { useState, useContext } from \"react\";\r\nimport logo from \"../instagram-font-png-1.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"../App\";\r\nimport http from \"./../services/httpService\";\r\n\r\nexport default function ResetPassword() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n  };\r\n\r\n  const validate = () => {\r\n    const data = { email };\r\n    const { error } = Joi.validate(data, schema);\r\n    if (error) toast.error(error.details[0].message);\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); //prevents application reloading\r\n    if (validate()) return;\r\n    try {\r\n      const { data } = await http.post(\"/resetPassword\", { email });\r\n      console.log(data);\r\n      toast(data);\r\n      history.push(\"/login\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(ex.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"card docenter\" onSubmit={handleSubmit}>\r\n        <div className=\"input-field\">\r\n          <img alt=\"instagram logo\" src={logo} width=\"100\" height=\"50\" />\r\n          <h5>Trouble Logging In?</h5>\r\n          <p>\r\n            Enter your email, we'll send you a link to get back into your\r\n            account.\r\n          </p>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button className=\"waves-effect waves-light btn btn-block #42a5f5 blue lighten-1\">\r\n            Send Login Link\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Instagram\\client\\src\\components\\updatePassword.jsx",["116","117","118","119"],"import React, { useState, useContext } from \"react\";\r\nimport logo from \"../instagram-font-png-1.png\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"../App\";\r\nimport http from \"./../services/httpService\";\r\n\r\nexport default function UpdatePassword() {\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const { token } = useParams();\r\n  const schema = {\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n  };\r\n\r\n  const validate = () => {\r\n    const data = { password };\r\n    const { error } = Joi.validate(data, schema);\r\n    if (error) toast.error(error.details[0].message);\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); //prevents application reloading\r\n    if (validate()) return;\r\n    try {\r\n      const { data } = await http.post(\"/updatePassword\", { token, password });\r\n      toast(data);\r\n      history.push(\"/login\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        toast.error(ex.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"card docenter\" onSubmit={handleSubmit}>\r\n        <div className=\"input-field\">\r\n          <img alt=\"instagram logo\" src={logo} width=\"100\" height=\"50\" />\r\n\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"waves-effect waves-light btn btn-block #42a5f5 blue lighten-1\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":12},{"ruleId":"124","severity":1,"message":"128","line":25,"column":11,"nodeType":"126","messageId":"127","endLine":25,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":38,"column":6,"nodeType":"131","endLine":38,"endColumn":8,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":9,"column":18,"nodeType":"126","messageId":"127","endLine":9,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":10,"column":11,"nodeType":"126","messageId":"127","endLine":10,"endColumn":16},{"ruleId":"129","severity":1,"message":"134","line":41,"column":6,"nodeType":"131","endLine":41,"endColumn":11,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":12},{"ruleId":"120","replacedBy":"137"},{"ruleId":"122","replacedBy":"138"},{"ruleId":"124","severity":1,"message":"139","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":44,"column":6,"nodeType":"131","endLine":44,"endColumn":20,"suggestions":"141"},{"ruleId":"124","severity":1,"message":"142","line":12,"column":9,"nodeType":"126","messageId":"127","endLine":12,"endColumn":13},{"ruleId":"129","severity":1,"message":"143","line":32,"column":6,"nodeType":"131","endLine":32,"endColumn":8,"suggestions":"144"},{"ruleId":"124","severity":1,"message":"133","line":9,"column":18,"nodeType":"126","messageId":"127","endLine":9,"endColumn":26},{"ruleId":"124","severity":1,"message":"133","line":9,"column":18,"nodeType":"126","messageId":"127","endLine":9,"endColumn":26},{"ruleId":"124","severity":1,"message":"145","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"146","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"124","severity":1,"message":"147","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":21},{"ruleId":"124","severity":1,"message":"145","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"146","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"124","severity":1,"message":"147","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":21},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["150"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["151"],"'http' is defined but never used.",["148"],["149"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'saveProfileImage'. Either include it or remove the dependency array.",["152"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["153"],"'useContext' is defined but never used.","'Link' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [dispatch, history]",{"range":"162","text":"163"},"Update the dependencies array to be: [body, history, title, url]",{"range":"164","text":"165"},"Update the dependencies array to be: [profileImage, saveProfileImage]",{"range":"166","text":"167"},"Update the dependencies array to be: [userId]",{"range":"168","text":"169"},[1448,1450],"[dispatch, history]",[1231,1236],"[body, history, title, url]",[1373,1387],"[profileImage, saveProfileImage]",[1037,1039],"[userId]"]